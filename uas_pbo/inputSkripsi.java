/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas_pbo;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

public class inputSkripsi extends javax.swing.JFrame {

    public inputSkripsi() {
        initComponents();
        Tampilan();
    }

    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<SkripsiPOJO> Skripsi;

    private void kosongkan_form() {
        isiISBN.setEditable(true);
        isiISBN.setText(null);
        isiJudul.setText(null);
        isiPengarang.setText(null);
        isiPenerbit.setText(null);
        isiTahun.setText(null);
        isiJumlah.setText(null);
        isiJumlahSkripsi.setText(null);
        isiSub.setText(null);
        isiKategori.setText(null);
        isiAngkatan.setText(null);
    }

    private void updateTable(EntityManager em) {

        // ... (kode untuk mendapatkan data dari database)
        DefaultTableModel newModel = new DefaultTableModel();
        newModel.addColumn("ISBN");
        newModel.addColumn("Judul");
        newModel.addColumn("Pengarang");
        newModel.addColumn("Penerbit");
        newModel.addColumn("Tahun terbit");
        newModel.addColumn("Jumlah halaman");
        newModel.addColumn("Jumlah skripsi");
        newModel.addColumn("Sub judul");
        newModel.addColumn("Kategori");
        newModel.addColumn("Angkatan");

        for (SkripsiPOJO data : Skripsi) {
            Object[] rowData = {
                data.getIdSkripsi(),
                data.getJudulSkripsi(),
                data.getPengarang(),
                data.getPenerbit(),
                data.getTahunTerbit(),
                data.getJumlahHalaman(),
                data.getJumlahSkripsi(),
                data.getSubJudul(),
                data.getKategori(),
                data.getAngkatan()
            };
            newModel.addRow(rowData);
        }
    }

    private void Tampilan() {
//        Skripsi.clear();
        EntityManager entityManager = Persistence.createEntityManagerFactory("Uas_PboPU").createEntityManager();
        entityManager.getTransaction().begin();
//        TypedQuery<Skripsi> querySelectAll = entityManager.createNamedQuery("Skripsi.findAll", Skripsi.class);
        Query query = entityManager.createQuery("SELECT s FROM Skripsi s");
        List<Skripsi> results = query.getResultList();
        entityManager.getTransaction().commit();
        entityManager.close();

        DefaultTableModel model = (DefaultTableModel) DefaultTableModel.getModel();
        model.setRowCount(0);
        for (Skripsi data : results) {
            Object[] baris = new Object[10];
            baris[0] = data.getIdSkripsi();
            baris[1] = data.getJudulSkripsi();
            baris[2] = data.getSubJudul();
            baris[3] = data.getPengarang();
            baris[4] = data.getPenerbit();
            baris[5] = data.getTahunTerbit();
            baris[6] = data.getJumlahHalaman();
            baris[7] = data.getJumlahSkripsi();
            baris[8] = data.getKategori();
            baris[9] = data.getAngkatan();
            model.addRow(baris);
        }
        DefaultTableModel.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        logout3 = new javax.swing.JButton();
        help = new javax.swing.JButton();
        buku = new javax.swing.JButton();
        skripsi = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        isiJudul = new javax.swing.JTextField();
        isiPenerbit = new javax.swing.JTextField();
        isiISBN = new javax.swing.JTextField();
        isiTahun = new javax.swing.JTextField();
        isiPengarang = new javax.swing.JTextField();
        isiJumlahSkripsi = new javax.swing.JTextField();
        isiJumlah = new javax.swing.JTextField();
        isiSub = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        print = new javax.swing.JButton();
        update = new javax.swing.JButton();
        tSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultTableModel = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        input = new javax.swing.JButton();
        cSkripsi = new javax.swing.JComboBox<>();
        isiKategori = new javax.swing.JTextField();
        isiAngkatan = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 680));

        jPanel10.setBackground(new java.awt.Color(41, 97, 90));

        logout3.setBackground(new java.awt.Color(41, 97, 90));
        logout3.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        logout3.setForeground(new java.awt.Color(255, 255, 255));
        logout3.setText("Logout");
        logout3.setBorder(null);
        logout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout3ActionPerformed(evt);
            }
        });

        help.setBackground(new java.awt.Color(41, 97, 90));
        help.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        help.setForeground(new java.awt.Color(255, 255, 255));
        help.setText("Help");
        help.setBorder(null);
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        buku.setBackground(new java.awt.Color(41, 97, 90));
        buku.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        buku.setForeground(new java.awt.Color(255, 255, 255));
        buku.setText("Buku");
        buku.setBorder(null);
        buku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bukuActionPerformed(evt);
            }
        });

        skripsi.setBackground(new java.awt.Color(41, 97, 90));
        skripsi.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        skripsi.setForeground(new java.awt.Color(255, 255, 255));
        skripsi.setText("Skripsi");
        skripsi.setBorder(null);
        skripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skripsiActionPerformed(evt);
            }
        });

        home.setBackground(new java.awt.Color(41, 97, 90));
        home.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Home");
        home.setBorder(null);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("university");
        jLabel16.setToolTipText("");

        jLabel18.setFont(new java.awt.Font("Bebas", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Bibliography");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(home)
                .addGap(33, 33, 33)
                .addComponent(skripsi)
                .addGap(26, 26, 26)
                .addComponent(buku)
                .addGap(30, 30, 30)
                .addComponent(help)
                .addGap(28, 28, 28)
                .addComponent(logout3)
                .addGap(38, 38, 38))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(home)
                            .addComponent(help)
                            .addComponent(logout3)
                            .addComponent(skripsi)
                            .addComponent(buku)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));
        jPanel8.setPreferredSize(new java.awt.Dimension(1250, 600));

        jLabel27.setFont(new java.awt.Font("Bebas", 0, 36)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Skripsi");

        jLabel28.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("ISBN");
        jLabel28.setPreferredSize(new java.awt.Dimension(45, 17));

        jLabel29.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Judul");
        jLabel29.setPreferredSize(new java.awt.Dimension(46, 17));

        jLabel30.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 51, 51));
        jLabel30.setText("Pengarang");
        jLabel30.setPreferredSize(new java.awt.Dimension(93, 17));

        jLabel32.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(51, 51, 51));
        jLabel32.setText("Tahun terbit");

        jLabel34.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 51, 51));
        jLabel34.setText("Jumlah ");

        jLabel37.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(51, 51, 51));
        jLabel37.setText(":");

        jLabel38.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setText("Sub judul");

        jLabel31.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 51, 51));
        jLabel31.setText("Penerbit");

        jLabel33.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 51, 51));
        jLabel33.setText("Jumlah halaman");

        jLabel40.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(51, 51, 51));
        jLabel40.setText(":");

        jLabel41.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 51, 51));
        jLabel41.setText(":");

        jLabel42.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(51, 51, 51));
        jLabel42.setText(":");

        jLabel43.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(51, 51, 51));
        jLabel43.setText(":");

        jLabel44.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(51, 51, 51));
        jLabel44.setText(":");

        jLabel45.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(51, 51, 51));
        jLabel45.setText(":");

        jLabel46.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(51, 51, 51));
        jLabel46.setText(":");

        jLabel47.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(51, 51, 51));
        jLabel47.setText(":");

        jLabel48.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(51, 51, 51));
        jLabel48.setText(":");

        jLabel39.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(51, 51, 51));
        jLabel39.setText("Kategori");

        jLabel49.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(51, 51, 51));
        jLabel49.setText("Angkatan");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addGap(528, 528, 528))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        isiJudul.setBackground(new java.awt.Color(202, 230, 226));
        isiJudul.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiJudul.setForeground(new java.awt.Color(41, 97, 90));
        isiJudul.setBorder(null);

        isiPenerbit.setBackground(new java.awt.Color(202, 230, 226));
        isiPenerbit.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiPenerbit.setForeground(new java.awt.Color(41, 97, 90));
        isiPenerbit.setBorder(null);

        isiISBN.setBackground(new java.awt.Color(202, 230, 226));
        isiISBN.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiISBN.setForeground(new java.awt.Color(41, 97, 90));
        isiISBN.setBorder(null);

        isiTahun.setBackground(new java.awt.Color(202, 230, 226));
        isiTahun.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiTahun.setForeground(new java.awt.Color(41, 97, 90));
        isiTahun.setBorder(null);

        isiPengarang.setBackground(new java.awt.Color(202, 230, 226));
        isiPengarang.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiPengarang.setForeground(new java.awt.Color(41, 97, 90));
        isiPengarang.setBorder(null);

        isiJumlahSkripsi.setBackground(new java.awt.Color(202, 230, 226));
        isiJumlahSkripsi.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiJumlahSkripsi.setForeground(new java.awt.Color(41, 97, 90));
        isiJumlahSkripsi.setBorder(null);

        isiJumlah.setBackground(new java.awt.Color(202, 230, 226));
        isiJumlah.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiJumlah.setForeground(new java.awt.Color(41, 97, 90));
        isiJumlah.setBorder(null);

        isiSub.setBackground(new java.awt.Color(202, 230, 226));
        isiSub.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiSub.setForeground(new java.awt.Color(41, 97, 90));
        isiSub.setBorder(null);

        save.setBackground(new java.awt.Color(35, 128, 115));
        save.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        print.setBackground(new java.awt.Color(35, 128, 115));
        print.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        print.setForeground(new java.awt.Color(255, 255, 255));
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(35, 128, 115));
        update.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        tSearch.setBackground(new java.awt.Color(202, 230, 226));
        tSearch.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        tSearch.setForeground(new java.awt.Color(41, 97, 90));
        tSearch.setBorder(null);
        tSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tSearchFocusGained(evt);
            }
        });
        tSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tSearchActionPerformed(evt);
            }
        });
        tSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tSearchKeyReleased(evt);
            }
        });

        DefaultTableModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ISBN", "Judul", "Pengarang", "Penerbit", "Tahun terbit", "Jumlah halaman", "Jumlah skripsi", "Sub judul", "Kategori", "Angkatan"
            }
        ));
        DefaultTableModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DefaultTableModelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DefaultTableModel);

        delete.setBackground(new java.awt.Color(35, 128, 115));
        delete.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        input.setBackground(new java.awt.Color(35, 128, 115));
        input.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        input.setForeground(new java.awt.Color(255, 255, 255));
        input.setText("Input");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        cSkripsi.setBackground(new java.awt.Color(202, 230, 226));
        cSkripsi.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        cSkripsi.setForeground(new java.awt.Color(35, 32, 32));
        cSkripsi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Skripsi", "Pengarang", "Penerbit", "Tahun Terbit" }));
        cSkripsi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 32, 32)));
        cSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSkripsiActionPerformed(evt);
            }
        });

        isiKategori.setBackground(new java.awt.Color(202, 230, 226));
        isiKategori.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiKategori.setForeground(new java.awt.Color(41, 97, 90));
        isiKategori.setBorder(null);

        isiAngkatan.setBackground(new java.awt.Color(202, 230, 226));
        isiAngkatan.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        isiAngkatan.setForeground(new java.awt.Color(41, 97, 90));
        isiAngkatan.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 837, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(print)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(isiJumlah, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiTahun, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiPenerbit, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiPengarang, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiJudul, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiISBN, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiSub, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiJumlahSkripsi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                        .addComponent(isiKategori, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isiAngkatan, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(tSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(isiISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiJumlahSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiSub, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isiAngkatan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String idSkripsi = isiISBN.getText();
        String judulSkripsi = isiJudul.getText();
        String pengarang = isiPengarang.getText();
        String penerbit = isiPenerbit.getText();
        String tahunTerbit = isiTahun.getText();
        String jumlahHalaman = isiJumlah.getText();
        String jumlahSkripsi = isiJumlahSkripsi.getText();
        String subJudul = isiSub.getText();
        String kategori = isiKategori.getText();
        String angkatan = isiAngkatan.getText();
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Uas_PboPU");
            EntityManager em = emf.createEntityManager();
            Skripsi s = new Skripsi();
            s.setIdSkripsi(idSkripsi);
            s.setJudulSkripsi(judulSkripsi);
            s.setPengarang(pengarang);
            s.setPenerbit(penerbit);
            s.setTahunTerbit(tahunTerbit);
            s.setJumlahHalaman(jumlahHalaman);
            s.setJumlahSkripsi(jumlahSkripsi);
            s.setSubJudul(subJudul);
            s.setKategori(kategori);
            s.setAngkatan(angkatan);
            em.getTransaction().begin();
            em.merge(s);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Data updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Perbarui tabel
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to update" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiISBN.setText(null);
        isiJudul.setText(null);
        isiPengarang.setText(null);
        isiPenerbit.setText(null);
        isiTahun.setText(null);
        isiJumlah.setText(null);
        isiJumlahSkripsi.setText(null);
        isiSub.setText(null);
        isiKategori.setText(null);
        isiAngkatan.setText(null);
        kosongkan_form();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String idSkripsi = isiISBN.getText();
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Uas_pboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Skripsi b = em.find(Skripsi.class, idSkripsi);
            em.remove(b);

            em.getTransaction().commit();

            JOptionPane.showMessageDialog(null, "Data deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to delete" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiISBN.setText("");
        kosongkan_form();
    }//GEN-LAST:event_deleteActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String idSkripsi = isiISBN.getText();
        String judulSkripsi = isiJudul.getText();
        String pengarang = isiPengarang.getText();
        String penerbit = isiPenerbit.getText();
        String tahunTerbit = isiTahun.getText();
        String jumlahHalaman = isiJumlah.getText();
        String jumlahSkripsi = isiJumlahSkripsi.getText();
        String subJudul = isiSub.getText();
        String kategori = isiKategori.getText();
        String angkatan = isiAngkatan.getText();
        try {
            EntityManager entityManager = Persistence.createEntityManagerFactory("Uas_PboPU").createEntityManager();
            entityManager.getTransaction().begin();
            Skripsi s = new Skripsi();
            s.setIdSkripsi(idSkripsi);
            s.setJudulSkripsi(judulSkripsi);
            s.setPengarang(pengarang);
            s.setPenerbit(penerbit);
            s.setTahunTerbit(tahunTerbit);
            s.setJumlahHalaman(jumlahHalaman);
            s.setJumlahSkripsi(jumlahSkripsi);
            s.setSubJudul(subJudul);
            s.setKategori(kategori);
            s.setAngkatan(angkatan);
            entityManager.persist(s);
            entityManager.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Data saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Kosongkan form setelah simpan
            kosongkan_form();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to save" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiISBN.setText("");
        isiJudul.setText("");
        isiTahun.setText("");
        isiPenerbit.setText("");
        isiTahun.setText("");
        isiJumlah.setText("");
        isiJumlahSkripsi.setText("");
        isiSub.setText("");
        isiKategori.setText("");
        isiAngkatan.setText("");
    }//GEN-LAST:event_saveActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            String reportPath = "src/Uas_Pbo/cetakSkripsi.jrxml";
            String selection = ((String) cSkripsi.getSelectedItem()).toLowerCase();
            String searchTerm = tSearch.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";

            switch (selection.toLowerCase()) {
                case "skripsi":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "pengarang":
                    queryString += "LOWER(s.pengarang) LIKE LOWER(:searchTerm)";
                    break;
                case "penerbit":
                    queryString += "LOWER(s.penerbit) LIKE LOWER(:searchTerm)";
                    break;
                case "tahun terbit":
                    queryString += "LOWER(s.tahunTerbit) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Uas_PboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            CriteriaBuilder cb = em.getCriteriaBuilder();
            CriteriaQuery<Skripsi> cq = cb.createQuery(Skripsi.class);
            Root<Skripsi> bok = cq.from(Skripsi.class);
            cq.select(bok);

            // Check if WHERE clause is not empty
            if (queryString.endsWith(" WHERE ")) {
                throw new IllegalArgumentException("No search criteria selected.");
            }

            TypedQuery<Skripsi> q = em.createQuery(cq);
            List<Skripsi> list = q.getResultList();
            Query query = em.createQuery(queryString);
            query.setParameter("searchTerm", "%" + searchTerm + "%");

            List<Skripsi> results = query.getResultList();

            // Menyiapkan data untuk laporan
            List<Object[]> data = new ArrayList<>();
            for (Skripsi result : results) {
                Object[] rowData = {
                    result.getIdSkripsi(),
                    result.getJudulSkripsi(),
                    result.getPengarang(),
                    result.getPenerbit(),
                    result.getTahunTerbit(),
                    result.getJumlahHalaman(),
                    result.getSubJudul()};
                    result.getKategori();
                    result.getAngkatan();
                data.add(rowData);
            }
            em.getTransaction().commit();
            em.close();
            emf.close();

            // Membuat sumber data untuk JasperReports dari data hasil pencarian
            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(results);

            // Memuat file desain laporan (*.jrxml)
            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
            JasperPrint print = JasperFillManager.fillReport(jasperReport, null, dataSource);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(inputSkripsi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        JFileChooser filechooser = new JFileChooser();
        int i = filechooser.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {
            EntityManager entityManager = Persistence.createEntityManagerFactory("Uas_PboPU").createEntityManager();
            entityManager.getTransaction().begin();
            File f = filechooser.getSelectedFile();
            String filepath = f.getPath();
            //Parsing CSV Data
            try {
                InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(filepath));
                org.apache.commons.csv.CSVParser csvParser = CSVFormat.DEFAULT.parse(inputStreamReader);
                for (CSVRecord csvRecord : csvParser) {
                    Skripsi s = new Skripsi();
                    s.setIdSkripsi(csvRecord.get(0));
                    s.setJudulSkripsi(csvRecord.get(1));
                    s.setPengarang(csvRecord.get(2));
                    s.setPenerbit(csvRecord.get(3));
                    s.setTahunTerbit(csvRecord.get(4));
                    s.setJumlahHalaman(csvRecord.get(5));
                    s.setJumlahSkripsi(csvRecord.get(6));
                    s.setSubJudul(csvRecord.get(7));
                    s.setKategori(csvRecord.get(8));
                    s.setAngkatan(csvRecord.get(9));
                    entityManager.persist(s);
                }
            } catch (IOException ex) {
                System.out.println("Error in Parsing CSV File");
            }
            entityManager.getTransaction().commit();
        }
    }//GEN-LAST:event_inputActionPerformed

    private void logout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout3ActionPerformed
        // Menampilkan dialog konfirmasi
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you serious?", "Logout", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            // Keluar dari aplikasi
            System.exit(0);
        }
    }//GEN-LAST:event_logout3ActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        new help().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_helpActionPerformed

    private void bukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bukuActionPerformed
        new help().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bukuActionPerformed

    private void skripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skripsiActionPerformed
        new inputSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_skripsiActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        new dashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void cSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSkripsiActionPerformed

    }//GEN-LAST:event_cSkripsiActionPerformed

    private void DefaultTableModelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DefaultTableModelMouseClicked
        int baris = DefaultTableModel.rowAtPoint(evt.getPoint());
        String idSkripsi = DefaultTableModel.getValueAt(baris, 0).toString();
        isiISBN.setText(idSkripsi);

        String judulSkripsi = DefaultTableModel.getValueAt(baris, 1).toString();
        isiJudul.setText(judulSkripsi);

        String pengarang = DefaultTableModel.getValueAt(baris, 2).toString();
        isiPengarang.setText(pengarang);

        String penerbit = DefaultTableModel.getValueAt(baris, 3).toString();
        isiPenerbit.setText(penerbit);

        String tahunTerbit = DefaultTableModel.getValueAt(baris, 4).toString();
        isiTahun.setText(tahunTerbit);

        String jumlahHalaman = DefaultTableModel.getValueAt(baris, 5).toString();
        isiJumlah.setText(jumlahHalaman);

        String jumlahSkripsi = DefaultTableModel.getValueAt(baris, 6).toString();
        isiJumlahSkripsi.setText(jumlahSkripsi);

        String subJudul = DefaultTableModel.getValueAt(baris, 7).toString();
        isiSub.setText(subJudul);
        
        String kategori = DefaultTableModel.getValueAt(baris, 8).toString();
        isiKategori.setText(subJudul);
        
        String angkatan = DefaultTableModel.getValueAt(baris, 9).toString();
        isiAngkatan.setText(subJudul);
    }//GEN-LAST:event_DefaultTableModelMouseClicked

    private void tSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tSearchKeyReleased
        try {
            String selection = (String) cSkripsi.getSelectedItem();
            String searchTerm = tSearch.getText().trim().toLowerCase();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";

            switch (selection.toLowerCase()) {
                case "skripsi":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "pengarang":
                    queryString += "LOWER(s.pengarang) LIKE LOWER(:searchTerm)";
                    break;
                case "penerbit":
                    queryString += "LOWER(s.penerbit) LIKE LOWER(:searchTerm)";
                    break;
                case "tahun terbit":
                    queryString += "LOWER(s.tahunTerbit) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Uas_PboPU");
            EntityManager em = emf.createEntityManager();

            TypedQuery<Skripsi> query = em.createQuery(queryString, Skripsi.class);
            query.setParameter("searchTerm", "%" + searchTerm + "%");

            List<Skripsi> results = query.getResultList();

            DefaultTableModel dataModel = new DefaultTableModel();

            // Add columns to the model
            dataModel.addColumn("ISBN");
            dataModel.addColumn("Judul");
            dataModel.addColumn("Pengarang");
            dataModel.addColumn("Penerbit");
            dataModel.addColumn("Tahun terbit");
            dataModel.addColumn("Jumlah halaman");
            dataModel.addColumn("Jumlah skripsi");
            dataModel.addColumn("Sub judul");
            dataModel.addColumn("Kategori");
            dataModel.addColumn("Angkatan");
            // ... tambahkan kolom lain sesuai kebutuhan
            // Add rows to the model
            for (Skripsi result : results) {
                Object[] rowData = {
                    result.getIdSkripsi(),
                    result.getJudulSkripsi(),
                    result.getPengarang(),
                    result.getPenerbit(),
                    result.getTahunTerbit(),
                    result.getJumlahHalaman(),
                    result.getJumlahSkripsi(),
                    result.getSubJudul(),
                    result.getKategori(),
                    result.getAngkatan()};
                dataModel.addRow(rowData);
            }
            // Set jTableBuku with the created model
            DefaultTableModel.setModel(dataModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_tSearchKeyReleased

    private void tSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tSearchActionPerformed

    private void tSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tSearchFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputSkripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DefaultTableModel;
    private javax.swing.JButton buku;
    private javax.swing.JComboBox<String> cSkripsi;
    private javax.swing.JButton delete;
    private javax.swing.JButton help;
    private javax.swing.JButton home;
    private javax.swing.JButton input;
    private javax.swing.JTextField isiAngkatan;
    private javax.swing.JTextField isiISBN;
    private javax.swing.JTextField isiJudul;
    private javax.swing.JTextField isiJumlah;
    private javax.swing.JTextField isiJumlahSkripsi;
    private javax.swing.JTextField isiKategori;
    private javax.swing.JTextField isiPenerbit;
    private javax.swing.JTextField isiPengarang;
    private javax.swing.JTextField isiSub;
    private javax.swing.JTextField isiTahun;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout3;
    private javax.swing.JButton print;
    private javax.swing.JButton save;
    private javax.swing.JButton skripsi;
    private javax.swing.JTextField tSearch;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
